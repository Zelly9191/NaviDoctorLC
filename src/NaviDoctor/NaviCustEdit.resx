<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgCustGrid.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="imgRunLine.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>